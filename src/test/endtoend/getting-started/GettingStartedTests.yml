tests:
  - "can clone hello-world/postgres":
      command: liquibase data clone --name hello-world --uri s3web://demo.titan-data.io/hello-world/postgres
      stderr:
        contains:
          - Running controlled container hello-world
          - Starting container hello-world
  - "can list hello-world/postgres":
      command: liquibase data ls
      stderr:
        contains:
          - CONTEXT       REPOSITORY            STATUS
          - docker        hello-world           running
  - "can get contents of hello-world/postgres":
      command: [docker, exec, hello-world, psql, postgres://postgres:postgres@localhost/postgres, -t, -c, SELECT * FROM messages;]
      stdout: Hello, World!
  - "can remove hello-world/postgres":
      command: liquibase data rm --force --repository hello-world
      stderr:
        contains:
          - Removing repository hello-world
          - Deleting volume v0
          - hello-world removed
  - "can run mongo-test":
      command: liquibase data run --name mongo-test --image mongo
      wait: 5
      stderr:
        contains:
          - Creating repository mongo-test
          - Creating docker volume mongo-test/v0 with path /data/configdb
          - Creating docker volume mongo-test/v1 with path /data/db
          - Running controlled container mongo-test
  - "can insert mongo-test Ada Lovelace":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, "db.employees.insert({firstName:\"Ada\",lastName:\"Lovelace\"})"]
      stdout: |-
        WriteResult({ "nInserted" : 1 })
  - "can commit mongo-test":
      command: [liquibase, data, commit, --message, First Employee, --repository, mongo-test]
      stderr:
        contains: Commit
      env:
        set:
          - COMMIT_GUID:
              after:
                after: "Commit "
  - "can insert mongo-test Grace Hopper":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, "db.employees.insert({firstName:\"Grace\",lastName:\"Hopper\"})"]
      stdout: |-
        WriteResult({ "nInserted" : 1 })
  - "can select employees from mongo-test":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.find()']
      stdout:
        contains:
          - '"firstName" : "Ada", "lastName" : "Lovelace"'
          - '"firstName" : "Grace", "lastName" : "Hopper"'
  - "can checkout commit mongo-test":
      command: [liquibase, data, checkout, --commit, $COMMIT_GUID, --repository, mongo-test]
      wait: 10
      stderr:
        contains:
          - Stopping container mongo-test
          - Checkout $COMMIT_GUID
          - Starting container mongo-test
          - $COMMIT_GUID checked out
      env:
        get:
         - COMMIT_GUID
  - "mongo-test checkout was successful":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.find()']
      stdout:
        excludes:
          - '"firstName" : "Grace", "lastName" : "Hopper"'
  - "can remove mongo-test":
      command: liquibase data rm --force --repository mongo-test
      stderr:
        contains:
          - Removing repository mongo-test
          - Deleting volume v0
          - Deleting volume v1
          - mongo-test removed
after:
  clearVars: true
